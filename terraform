creating multiple instances with variable:---
variable "instance" {
type= list
default= ["one","two","three"]
}
resource "aws_instance" "web" {
  ami           = "ami-0e742cca61fb65051"
  instance_type = "t3.micro"
count=3
  tags = {
    Name = var.instance[count.index]
  }
}
----------------------------------

condition statements:--

variable "instancetype" {
type= list
default = ["ami-0e742cca61fb65051","ami-0e742cca61fb65051"]
}
variable "image" {
type= list
default= ["t2.micro","t2.nano"]
}
variable "input" {
}
resource "aws_instance" "dev" {
  instance_type = var.image[0]
  ami           = var.instancetype[0]
  count=var.input=="dev" ? 2 : 0
  tags = {
    Name = "HelloWorld"
  }
}
resource "aws_instance" "test" {
  instance_type = var.image[1]
  ami           = var.instancetype[1]
  count= var.input== "test" ? 2 : 0
  tags = {
    Name = "HelloWorld"
  }

-------------------------------------------------------------

using tags with help of local variables:----

}
locals {
common_tag= {
name      = "myproject"
owner     = "Devops"
}
}

resource "aws_instance" "web" {
  ami           = "ami-0e742cca61fb65051"
  instance_type = "t3.micro"
  tags = local.common_tag
}
resource "aws_vpc" "main" {
  cidr_block       = "10.0.0.0/16"
  instance_tenancy = "default"
  tags = local.common_tag
}
resource "aws_ebs_volume" "example" {
  availability_zone = "ap-south-1a"
  size              = 10
  tags = local.common_tag
}

-----------------------------------------------------------

terraform with s3 backend and dynamodb:--

  backend "s3" {
    bucket = "mybuckket11"
    key    = "mybucket/project"
    region = "ap-south-1"
    access_key = "Axxx"
  secret_key = "bxxx"
  }
}
resource "aws_instance" "server1" {
  ami           = "ami-0e742cca61fb65051"
  instance_type = "t3.micro"

  tags = {
    Name = "server1"
  }
}
resource "aws_instance" "server2" {
  ami           = "ami-0e742cca61fb65051"
  instance_type = "t3.micro"

  tags = {
    Name = "server2"
  }
}

----------------------------------------------------------

creating terraform workspace:----

terraform workspace new (name)
terraform workspace select (workspace name)






